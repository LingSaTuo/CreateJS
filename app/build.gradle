apply plugin: 'com.android.application'
android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.lingsatuo.createjs"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 22
        versionName "18.02.07"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    lintOptions {
        disable 'InvalidPackage'
        //只要添加下面这一句就可以了
        disable 'MissingTranslation'
    }
    compileOptions {//使用JAVA8语法解析
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false

        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }
    dataBinding {
        enabled = true
    }
    packagingOptions {
        exclude 'proguard-project.txt'
        exclude 'project.properties'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
    }
    changeApkName(applicationVariants, defaultConfig)
    dataBinding {
        enabled = true
    }
}

def changeApkName(applicationVariants, defaultConfig) {
    applicationVariants.all { variant ->
        if (variant.buildType.name.equals("release")) {

            def date = new java.text.SimpleDateFormat("yy.M.d").format(new Date())//时间
            def versionName = "${date}"
            defaultConfig.versionName = versionName
            variant.mergedFlavor.setVersionName(versionName)
            variant.outputs.all { output ->
                def file = output.outputFile;
                if (file != null && file.name.endsWith('.apk')) {
                    // 版本号
                    def versionCode = defaultConfig.versionCode
                    def newName = "CreateJS_${variant.mergedFlavor.versionName}_${versionCode}.apk"
                    outputFileName = newName;
                }
            }
        }
    }

}


configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile 'com.android.support:support-annotations:26+'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.+'
    testCompile 'junit:junit:4.12'
    compile 'net.lingala.zip4j:zip4j:1.3.2'
    compile 'com.wang.avi:library:1.0.0'
    compile 'com.github.kbiakov:CodeView-android:1.3.1'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'cn.bmob.android:bmob-sdk:3.5.0'
    compile 'cn.bmob.android:http-legacy:1.0'
    compile 'ren.qinc.edit:lib:0.0.5'
    compile 'com.xw.repo:PullToRefresh:2.1@aar'
    compile files('libs/Window.jar')
    implementation project(':editor')
    implementation project(':compiler')
    implementation files('E:/AndroidStudioProjects/CreateJS/compiler/libs/ant.jar')
    implementation files('libs/jsoup-1.8.1.jar')
}
